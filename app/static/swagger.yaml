openapi: 3.0.1
info:
  title: Mechanic Workshop API
  version: 1.0.0
  description: Flask backend for managing mechanics, customers, inventory, and service tickets.
servers:
  - url: https://mechanics-api.onrender.com/api
    description: Production server
  - url: http://127.0.0.1:5000
    description: Local development server

tags:
  - name: Customers
    description: Endpoints for customer management
  - name: Mechanics
    description: Endpoints for mechanic management
  - name: Inventory
    description: Endpoints for inventory management
  - name: ServiceTickets
    description: Endpoints for service ticket creation and tracking
  - name: NegativeTests
    description: Endpoints for intentional failure scenarios

paths:
  /customers:
    post:
      tags: [Customers]
      summary: Create Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCreate"
      responses:
        "201":
          description: Customer created
    get:
      tags: [Customers]
      summary: Get All Customers
      responses:
        "200":
          description: List of customers

  /mechanics:
    post:
      tags: [Mechanics]
      summary: Register Mechanic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MechanicCreate"
      responses:
        "201":
          description: Mechanic registered
    get:
      tags: [Mechanics]
      summary: Get All Mechanics
      responses:
        "200":
          description: List of mechanics

  /inventory:
    get:
      tags: [Inventory]
      summary: Get All Inventory
      responses:
        "200":
          description: List of inventory items
    post:
      tags: [Inventory]
      summary: Add Inventory Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryCreate"
      responses:
        "201":
          description: Inventory item created

  /service_tickets:
    get:
      tags: [ServiceTickets]
      summary: Get All Service Tickets
      responses:
        "200":
          description: List of service tickets
    post:
      tags: [ServiceTickets]
      summary: Create Service Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceTicketCreate"
      responses:
        "201":
          description: Service ticket created

components:
  schemas:
    CustomerCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        car:
          type: string
      required: [name, email, phone, car]

    MechanicCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        specialty:
          type: string
        password:
          type: string
      required: [name, email, specialty, password]

    InventoryCreate:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        quantity:
          type: integer
      required: [name, price, quantity]

    ServiceTicketCreate:
      type: object
      properties:
        description:
          type: string
        status:
          type: string
        customer_id:
          type: integer
      required: [description, status, customer_id]
