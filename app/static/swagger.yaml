swagger: "2.0"
info:
  version: "1.0.0"
  title: "Mechanic Shop API"
  description: "API for managing customers, mechanics, parts, and service tickets."

host: "mechanics-api.onrender.com"
basePath: "/"
schemes:
  - "https"

consumes:
  - "application/json"
produces:
  - "application/json"

# ================================
# SECURITY
# ================================
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: |
      JWT Authorization header using the Bearer scheme.

# ================================
# PATHS
# ================================
paths:
  /customers:
    get:
      summary: Get all customers
      responses:
        200:
          description: List of customers
    post:
      summary: Create a new customer
      parameters:
        - in: body
          name: customer
          required: true
          schema:
            $ref: "#/definitions/CustomerInput"
      responses:
        201:
          description: Customer created

  /mechanics:
    get:
      summary: Get all mechanics
      responses:
        200:
          description: List of mechanics
    post:
      summary: Create a new mechanic
      parameters:
        - in: body
          name: mechanic
          required: true
          schema:
            $ref: "#/definitions/MechanicInput"
      responses:
        201:
          description: Mechanic created

  /inventory:
    get:
      summary: Get all parts in inventory
      responses:
        200:
          description: List of parts
    post:
      summary: Add a new part
      parameters:
        - in: body
          name: part
          required: true
          schema:
            $ref: "#/definitions/InventoryInput"
      responses:
        201:
          description: Part created

  /service-tickets:
    get:
      summary: Get all service tickets
      responses:
        200:
          description: List of tickets
    post:
      summary: Create a new service ticket
      parameters:
        - in: body
          name: ticket
          required: true
          schema:
            $ref: "#/definitions/ServiceTicketInput"
      responses:
        201:
          description: Ticket created

  /ticket-inventory:
    post:
      summary: Link inventory to service ticket
      parameters:
        - in: body
          name: link
          required: true
          schema:
            $ref: "#/definitions/ServiceTicketInventoryInput"
      responses:
        201:
          description: Inventory linked to ticket

# ================================
# DEFINITIONS
# ================================
definitions:
  CustomerInput:
    type: object
    required:
      - name
      - email
      - phone
      - car
    properties:
      name:
        type: string
        example: "John Doe"
      email:
        type: string
        example: "john@example.com"
      phone:
        type: string
        example: "555-1111"
      car:
        type: string
        example: "Honda Civic"

  MechanicInput:
    type: object
    required:
      - name
      - email
      - specialty
      - password
    properties:
      name:
        type: string
        example: "Mike Wrench"
      email:
        type: string
        example: "mike@example.com"
      specialty:
        type: string
        example: "Engine"
      password:
        type: string
        example: "password1"

  InventoryInput:
    type: object
    required:
      - name
      - price
    properties:
      name:
        type: string
        example: "Brake Pads"
      price:
        type: number
        format: float
        example: 59.99

  ServiceTicketInput:
    type: object
    required:
      - customer_id
      - description
      - status
    properties:
      customer_id:
        type: integer
        example: 1
      description:
        type: string
        example: "Oil change"
      status:
        type: string
        example: "Open"

  ServiceTicketInventoryInput:
    type: object
    required:
      - ticket_id
      - part_id
      - quantity
    properties:
      ticket_id:
        type: integer
        example: 1
      part_id:
        type: integer
        example: 2
      quantity:
        type: integer
        example: 1
